{"version":3,"sources":["components/Form.tsx","components/Todo.tsx","components/TodoList.tsx","hostURI.ts","pages/createTodo/index.tsx","pages/viewTodo/index.tsx","components/ViewUuid.tsx","components/SignupForm.tsx","components/LoginForm.tsx","components/About.tsx","components/Logout.tsx","pages/Home.tsx","App.tsx","index.tsx","components/Todo.module.css","components/Form.module.css","pages/createTodo/createTodo.module.css","components/viewUuid.module.css"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","className","styles","divstyle","value","onChange","event","target","type","inputs","placeholder","Tooltip","title","onClick","preventDefault","item","isCompleted","id","Math","random","submitBtn","name","option","Todo","todo","disabled","key","listi","completed","map","elem","completeBtn","hide","filter","el","deleteBtn","TodoList","filterTodos","Backend","App","useState","status","setFilterTodos","useEffect","disp","divBtn","uuid","localStorage","getItem","uname","todoswithUUid","fetch","method","mode","headers","Headers","body","JSON","stringify","then","data","store","addNotification","message","insert","container","animationIn","animationOut","dismiss","duration","onScreen","console","log","catch","err","subButton","ViewTodos","params","useParams","undefined","length","setLength","a","response","json","_id","ViewUuid","setUname","e","to","SignupForm","setPassword","password","setS","React","open","setOpen","Button","variant","color","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","setItem","DialogActions","res","LoginForm","setLS","setLO","token","info","About","setModal","Logout","removeItem","Home","modal","loginsignup","signup","logout","src","alt","exact","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0dbb29ec.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './Form.module.css'\nimport { BiAddToQueue } from 'react-icons/bi'\nimport { Tooltip } from '@material-ui/core';\n\nimport { TodoType } from '../pages/createTodo/index'\n\ninterface FormProps {\n    todos: TodoType[],\n    inputText: string,\n    setInputText: (a: string) => void,\n    setTodos: (b: TodoType[]) => void,\n    setStatus: (arg0: string) => void\n}\n\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }: FormProps) => {\n    const inputFormHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInputText(event.target.value)\n    }\n    const suubmitTodoHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        setTodos([\n            ...todos,\n            { item: inputText, isCompleted: false, id: Math.random() * 1000 },\n        ]);\n        setInputText(\"\")\n        //console.log(todos)\n    }\n    const statusHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setStatus(event.target.value)\n    }\n\n    return (\n        <div className={styles.divstyle}>\n            <form>\n                <input value={inputText} onChange={inputFormHandler} type='text' className={styles.inputs} placeholder='Enter yourTodo' />\n                <Tooltip title='Create list item'>\n                        <button onClick={suubmitTodoHandler} type='submit' className={styles.submitBtn}><BiAddToQueue />\n                </button>\n                </Tooltip>\n                <select onChange={statusHandler} name='todos' className={styles.option}>\n                    <option value='all'>View All</option>\n                    <option value='completed'>Done</option>\n                    <option value='uncompleted'>Not Done</option>\n                </select>\n            </form>\n        </div>\n    )\n}\n\nexport default Form","import React from 'react'\nimport styles from './Todo.module.css'\nimport { AiOutlineFileDone } from 'react-icons/ai'\nimport { AiOutlineDelete } from 'react-icons/ai'\nimport { Tooltip } from '@material-ui/core';\n\nimport {TodoType} from '../pages/createTodo/index'\n\ninterface TodoProp{\n  children: any,\n  item: string | undefined,\n  todo: TodoType,\n  todos: TodoType[],\n  setTodos:(b: TodoType[]) => void,\n  disabled?: boolean,\n  key: number|string|undefined,\n  length?: number\n}\n\nconst Todo = ({ item, todo, todos, setTodos, disabled, key}: TodoProp) =>{\n    \n    const deleteHandler =()=>{\n     setTodos(todos.filter((el:TodoType) => el.id !== todo.id))\n    }\n\n    const compHandler =()=> {\n        setTodos(todos.map((elem: TodoType) => {\n            if( elem.id === todo.id){\n                return{\n                    ...elem, isCompleted: !elem.isCompleted\n                }\n            }\n            return elem;\n        }))\n    }\n\n    return(\n        <div className={styles.divstyle} key={key}>\n            <li className={`${styles.listi} ${todo.isCompleted ? styles.completed :'' }`}> {item} </li>\n            <Tooltip title='Mark as completed?'>\n                <button onClick={compHandler} className={`${styles.completeBtn} ${disabled ? styles.hide :'' }`} disabled={disabled}><AiOutlineFileDone/>\n                </button>\n            </Tooltip>\n            <Tooltip title='delete todo?'>\n                <button onClick={deleteHandler} className={`${styles.deleteBtn} ${disabled ? styles.hide : ''}`} disabled={disabled}><AiOutlineDelete/>\n                </button>\n            </Tooltip>\n      </div>\n    )\n}\nexport default Todo","import React from 'react'\nimport Todo from './Todo'\nimport {TodoType} from '../pages/createTodo/index'\n\ninterface Todolist{\n    todos: TodoType[],\n    setTodos:(b: TodoType[]) => void,\n    filterTodos: TodoType[]\n}\n\nconst TodoList = ({ todos, setTodos, filterTodos }:Todolist) =>{\n    return(\n        <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n            {filterTodos.map((todo:TodoType) =>(\n                <Todo setTodos={setTodos}\n                      todos={todos} \n                      key={todo.id} \n                      item={todo.item}  \n                      todo={todo}>\n                </Todo>\n            ))}\n        </ul>\n      </div>\n    )\n}\nexport default TodoList","export const Backend = \"https://pengoox.herokuapp.com\"","\nimport { AiOutlineSave } from 'react-icons/ai'\n\nimport Form from '../../components/Form'\nimport TodoList from '../../components/TodoList'\nimport React,{useState, useEffect} from 'react'\nimport disp from './createTodo.module.css';\nimport { Backend } from '../../hostURI'\n\nimport ReactNotification from 'react-notifications-component'\nimport { store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport 'animate.css-react'\nimport { Tooltip } from '@material-ui/core';\n\n\nexport interface TodoType{\n  isCompleted?: boolean,\n  inputText?: string |undefined,\n  uuid?: string,\n  uname?: string,\n  _id?: string,\n  item?: string,\n  id?:string |number,\n}\n\n\nfunction App() {\n  const [inputText,setInputText] = useState<string>(\"\");\n  const [todos,setTodos] = useState<TodoType[]>([]);\n  const [status,setStatus] = useState<string>(\"\");\n  const [filterTodos, setFilterTodos] = useState<TodoType[]>([]);\n\n useEffect(()=>{\n( () =>{\n    switch(status){\n      case \"completed\":\n        setFilterTodos(todos.filter((todo)=> todo.isCompleted === true));\n      break;\n      case \"uncompleted\":\n        setFilterTodos(todos.filter((todo)=> todo.isCompleted === false));\n      break;\n      default:\n        setFilterTodos(todos)\n      break;\n    }\n  }) ()\n }, [todos, status]);\n\n const submitToDataBase = (event:React.MouseEvent<HTMLButtonElement>)=>{\n  event.preventDefault()\n  const uuid = localStorage.getItem('uuid')\n  const uname = localStorage.getItem('uname')\n  const todoswithUUid = todos.map(todo => {\n    return {\n      ...todo,\n      uuid,\n      uname\n    }\n  })\n  fetch(`${Backend}/todos/create`,{\n      method : 'POST',\n      mode:'cors',\n      headers : new Headers( {\n          'Content-Type':'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n      }),\n      body:JSON.stringify(todoswithUUid)\n  }).then((data) => {store.addNotification({\n    title: \" Yay! \",\n    message: `Your list has been saved.`,\n    type: \"success\",\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n     animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    dismiss: {\n        duration: 5000,\n        onScreen: true\n    }\n  })\n    console.log(data)\n  }).catch((err) =>store.addNotification({\n    title: \"Oops!\",\n    message: `Your list is not saved`,\n    type: 'danger',\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n     animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    dismiss: {\n        duration: 5000,\n        onScreen: true\n    }\n  }))\n}\n\n  return ( \n  <>\n     <ReactNotification />\n     <h5 className='wel-text'> List all your work here </h5>\n    <div className={disp.divstyle}>\n      <Form inputText={inputText} todos={todos} setTodos={setTodos} \n            setInputText={setInputText} setStatus={setStatus} ></Form>\n      </div>\n    <div className={disp.divstyle}>\n      <TodoList todos={todos} setTodos={setTodos} filterTodos={filterTodos}></TodoList>\n    </div>\n     <div className={disp.divBtn}> \n     <Tooltip title='Save your whole todo list'>\n        <button onClick={submitToDataBase} type='submit' className={disp.subButton} >Save <AiOutlineSave/></button>\n      </Tooltip>\n      </div>\n  </>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport CachedRoundedIcon from '@material-ui/icons/CachedRounded';\n\nimport Todo from '../../components/Todo'\nimport '../../App.css'\nimport { TodoType } from '../createTodo/index'\nimport { Backend } from '../../hostURI';\n\ninterface param {\n    uname: string\n}\n\nconst ViewTodos = () => {\n    const params = useParams<param>();\n    const [todos, setTodos] = useState<TodoType[]>([])\n    const [length, setLength] = useState<number|undefined>(undefined)\n    console.log(params.uname)\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const response = await fetch(`${Backend}/todos/listByName/${params.uname}`, {\n                    method: 'GET',\n                    mode: 'cors',\n                });\n                console.log(response);\n                const data = await response.json();\n                setLength(data.length)\n                console.log(data);\n                console.log({ length })\n                setTodos(data);\n            } catch (error) {\n                throw error;\n            }\n        })()\n    }, [length, params.uname])\n\n    if (length === undefined) {\n        return (<>\n            <h5 className='wel-text'> You are doing great!</h5>\n            <h3 className='head-text'> Loading ... <CachedRoundedIcon className='head-text'/></h3>\n        </>)\n    }\n    else if (length === 0) {\n        return (<>\n             <h5 className='wel-text'>  You are doing great!</h5>\n            <h3 className='head-text'> Error! something went wrong </h3>\n        </>)}\n    else {\n        return (<>\n        <h5 className='wel-text'> You are doing great!</h5>\n        {\n            todos.map((todo) => {\n                return (\n                    <Todo setTodos={setTodos}\n                        todos={todos}\n                        key={todo._id}\n                        item={todo.item}\n                        todo={todo}\n                        disabled={true}\n                        length={length}>\n                    </Todo>\n                )\n            })\n        }\n        <h5 className='home-text'> Don't forget to love yourself :) </h5>\n        </>)\n    }\n}\n\n\nexport default ViewTodos","\nimport styles from './viewUuid.module.css'\nimport React,{useState} from 'react'\nimport {Link} from 'react-router-dom';\n\n\nfunction ViewUuid () {\n   // const [uuid,setUuid] = useState(\"\")\n    const [uname,setUname] = useState<string>(\"\")\n\n    return(\n        <>\n        <h5 className='wel-text'> View your progress</h5>\n        <div className={styles.divstyle}>\n            <input value={uname} onChange={(e:React.ChangeEvent<HTMLInputElement>)=>{setUname(e.target.value)}} type='text'\n                   className={`${styles.inputs}`} placeholder='enter uname'>    \n             </input>\n            <Link to={`/view/${uname}`} className={styles.submitBtn}>ok</Link>\n        </div>\n        </>\n    )\n}\nexport default ViewUuid","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport 'animate.css-react'\n\nimport { Backend } from '../hostURI';\n\n\ninterface FormDialogueprops {\n  setUname: (a: string) => void,\n  setPassword: (a: string) => void,\n  password: string,\n  uname: string,\n  setS: (a: boolean) => void,\n}\n\n// interface LoginResponse {\n//   message: string,\n//   token: string\n// }\n\nexport default function SignupForm({ setUname, setPassword, password, uname, setS }: FormDialogueprops) {\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleSignUp = () => {\n    setUname(uname)\n\n    fetch(`${Backend}/user/create`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"uname\": uname,\n        \"password\": password\n      })\n    }).then((res: Response) => {\n      if (res.status === 400) {\n        store.addNotification({\n          title: `Username Unavailable`,\n          message: \"try another username OR login if you have an account\",\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            onScreen: true\n          }\n        })\n      }\n      else if (res.status === 403) {\n        store.addNotification({\n          title: `Error`,\n          message: \"not authorized\",\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            onScreen: true\n          }\n        })\n      }\n      else {\n        store.addNotification({\n          title: `welcome ${uname}`,\n          message: \"Sign up successful\",\n          type: \"success\",\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n          animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            onScreen: true\n          }\n        })\n        setS(false)\n      }\n    }).catch((err) =>\n      store.addNotification({\n        title: `Couldn't signin. Try again`,\n        message: \"Signin failed\",\n        type: 'danger',\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      })\n    )\n    setOpen(false)\n  }\n\n  \n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    localStorage.setItem('uname', e.target.value);\n    setUname(e.target.value)\n  }\n  const getPassword = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setPassword(e.target.value)\n  }\n\n  return (\n    <>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n        Signup\n      </Button>\n      <Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Signup</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Create your own userid. Enjoy smart working.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Username\"\n            type=\"string\"\n            fullWidth\n            onChange={handleChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"password\"\n            type=\"password\"\n            fullWidth\n            onChange={getPassword} >\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSignUp} color=\"primary\" >\n            Sign Up\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport 'animate.css-react'\n\nimport { Backend } from '../hostURI';\n\ninterface FormDialogueprops {\n    setUname: (a: string) => void,\n    setPassword: (a: string) => void,\n    password: string,\n    uname: string,\n    setLS: (a: boolean) => void,\n    setLO: (a: boolean) => void,\n  }\n  \n  interface LoginResponse {\n    message: string,\n    token: string\n  }\nexport default function LoginForm({ setUname, setPassword, password, uname, setLS, setLO }: FormDialogueprops) {\n   \n  const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    \n    const handleLogin = () => {\n      localStorage.setItem('uname', uname);\n      setUname(uname)\n      console.log(uname)\n  \n      fetch(`${Backend}/user/login`, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"uname\": uname,\n          \"password\": password\n        })\n      }).then((res: Response) => {\n        const JsonPromise = res.json();\n        JsonPromise.then((data: LoginResponse) => {\n          localStorage.setItem('token', data.token)\n          console.info('User successfully logged in')\n          store.addNotification({\n            title: \" Login Successful\",\n            message: ` How have you been ${uname} ?`,\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          }) \n          setLO(true)\n          setLS(false)\n        }) \n      }).catch((err) =>\n            store.addNotification({\n            title: \"Login failed\",\n            message: `Wrong username/password. Try again.`,\n            type: 'danger',\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 3000,\n              onScreen: true\n            }\n          })\n        )\n      setOpen(false)\n    };\n    const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      localStorage.setItem('uname', e.target.value);\n      setUname(e.target.value)\n    }\n    const getPassword = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setPassword(e.target.value)\n    }\n  \n  return (\n    <>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n        Login \n      </Button>\n      <Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the following to login. If you are a new user, signup first. \n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Username\"\n            type=\"string\"\n            fullWidth\n            onChange={handleChange}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"password\"\n            type=\"password\"\n            fullWidth\n            onChange={getPassword} >\n          </TextField>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleLogin} color=\"primary\">\n            Login\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import './About.css'\n\ninterface AboutI{\n    setModal:(a:boolean) => void\n}\n\nconst About = ({setModal}: AboutI) =>{\n\n    return (\n        <div className='modalbg'>\n            <div className='modalc'>\n                <p><b>Nice to meet you.</b><br/>\n                    This is a todos app where you can list your work, update its status as completed/uncompleted and also save them to view them later. \n                    Do not forget to set username first. Hope your experience is good. </p> \n                <button onClick={()=> setModal(false)} className='btn'>Close About</button> \n            </div>\n        </div>\n    )\n}\n\nexport default About","import { store } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport 'animate.css-react'\n\ninterface lout{\n    setLS: (a: boolean) => void,\n    setLO: (a: boolean) => void,\n    setS: (a: boolean) => void,\n}\n\nconst Logout = ({setLS, setLO, setS}:lout) =>{\n    \n    const logoutfn = () => {\n        localStorage.removeItem('token')\n        localStorage.removeItem('uname')\n        store.addNotification({\n            title: `Logged out of your account`,\n            message: \"Logout Successful\",\n            type:'info',\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 5000,\n              onScreen: true\n            }\n          })\n        setLS(true)\n        setS(true)\n        setLO(false)\n    }\n\n    return(\n        <>\n            <button onClick={logoutfn}>LogOut</button>\n        </>\n    )\n}\nexport default Logout","import { useEffect, useState } from 'react';\n\n\nimport SignupForm from '../components/SignupForm'\nimport LoginForm from '../components/LoginForm'\nimport About from '../components/About';\nimport Logout from '../components/Logout';\n\n\nconst Home = () => {\n\n    const [uname, setUname] = useState<string>('Your')\n    const [password, setPassword] = useState<string>('')\n    const [modal, setModal] = useState<boolean>(false)\n    const [loginsignup, setLS] = useState<boolean>(true)\n    const [signup, setS] = useState<boolean>(true)\n    const [logout, setLO] = useState<boolean>(false)\n\n    useEffect(() => {\n        if (localStorage.getItem('uname') !== null) {\n            setUname(localStorage.getItem('uname')!)\n        }\n    }, [uname])\n    return (\n        <>\n            <div className='head-text'>\n                <p className='text1'>{uname}'s ToDo List<p className='text2'>Work smarter. List your todos, update and view them.</p>\n                    <p className='text2'>Sign in then login to create todos.</p>\n                    <p className='text2'>Happy working !</p>\n                </p>\n                <img src='https://wallpapercave.com/wp/wp5973544.jpg' className='himage' alt='work desk'></img>\n                <button className='about-btn' onClick={() => setModal(true)}>About</button>\n                {modal && <About setModal={setModal} />}\n            </div>\n            <div className='lsindiv'>\n               {loginsignup && signup && <SignupForm setUname={setUname} setPassword={setPassword} password={password} uname={uname} setS={setS}/>}\n               {loginsignup && <LoginForm setUname={setUname} setPassword={setPassword} password={password} uname={uname} setLS={setLS} setLO={setLO}></LoginForm>}\n               {logout && <Logout setLS={setLS} setLO={setLO} setS={setS}></Logout>}\n            </div>\n            <img src='https://wallpapercave.com/wp/wp5973544.jpg' className='himage2' alt='work desk'></img>\n        </>\n    )\n}\nexport default Home","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport './App.css'\n\nimport ReactNotification from 'react-notifications-component'\n\nimport CreateTodos from './pages/createTodo';\nimport ViewTodos from './pages/viewTodo';\nimport ViewUuid from './components/ViewUuid';\nimport Home from './pages/Home';\n\nconst App = () => {\n\n\nreturn(<div>           \n    <ReactNotification />\n   <Router>\n       <div>\n           <ul className='linkss'>\n               <li>\n                   <Link to='/' className='cardh'> Home </Link>\n               </li>\n               <li>\n                   <Link to='/create'  className='card'> Create </Link>\n               </li>\n               <li>\n                   <Link to='/view'  className='cardv' > View </Link>\n               </li>\n           </ul>\n       </div>\n       <Switch>\n            <Route exact path='/'>\n               <Home/>\n           </Route>\n           <Route exact path='/create'>\n               <CreateTodos/>\n           </Route>\n           <Route path='/view/:uname'>\n                <ViewTodos/>\n           </Route>\n           <Route exact path='/view'> \n                <ViewUuid /> \n           </Route>\n       </Switch>\n   </Router>\n   </div>\n)\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divstyle\":\"Todo_divstyle__2AP0k\",\"completeBtn\":\"Todo_completeBtn__1iM3P\",\"deleteBtn\":\"Todo_deleteBtn__3gbn9\",\"listi\":\"Todo_listi__1tSP8\",\"completed\":\"Todo_completed__3J65l\",\"hide\":\"Todo_hide__mwZuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divstyle\":\"Form_divstyle__3g0n8\",\"submitBtn\":\"Form_submitBtn__3V2RR\",\"inputs\":\"Form_inputs__3qUdD\",\"option\":\"Form_option__11fLh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subButton\":\"createTodo_subButton__lYnC4\",\"divstyle\":\"createTodo_divstyle__91e8D\",\"divBtn\":\"createTodo_divBtn__t2OHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"viewUuid_submitBtn__3We5A\",\"inputs\":\"viewUuid_inputs__2YONW\",\"divstyle\":\"viewUuid_divstyle__wY-r7\",\"invalid\":\"viewUuid_invalid__39W95\"};"],"sourceRoot":""}